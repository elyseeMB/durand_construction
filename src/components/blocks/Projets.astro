---
import { getCollection } from "astro:content";
import HeadingSmart from "../HeadingSmart.astro";
import BottomPage from "./BottomPage.astro";
import { getEntry } from "astro:content";
import { strategyToUppercase } from "../../helpers/dom.ts";

const articles = await getCollection("blog", ({ data }) => {
  return !!data.thumbnail;
});

const doc = await Promise.all(
  articles.map(async (article) => {
    const taxonomies = article.data.taxonomies 
      ? await Promise.all(article.data.taxonomies.map(taxonomy => 
          getEntry(taxonomy.collection, taxonomy.id)
        ))
      : [];
    const author = await getEntry(article.data.author.collection, article.data.author.id);
    return {
      article,
      taxonomies,
      author
    };
  })
);


---

<div class="bg-color container">
  <HeadingSmart
    title="NOS DERNIERS ARTICLES,"
    description="SUIVEZ NOTRE ACTUALITÉ AU CŒUR DE L’ARCHITECTURE ET DU BÂTIMENT"
  />
  <BottomPage
    labelForLink='voir tous nos articles'
    href="/blog"
    topic="Blog"
    classement="4.0"
    description="nous vous partageons ici l’envers du décor, les tendances qui nous animent et notre approche sur la manière de bâtir intelligemment."
  >
  <div class="articles">
    {
      doc.map(({article, author, taxonomies}) => (
        <article>
          <div class="meta">
            <div class="taxonomies">
              <span class="tags">
                {taxonomies?.map(taxonomy  => (
                  <span class="tag"> {taxonomy?.data.name} </span>
              ))}
              </span>
            </div>
             <div class="info">
              <div class="title"> {strategyToUppercase(article.data.title)} </div>
              <div class="description"> 
              <p>
                {article.data.summary ? strategyToUppercase(article.data.summary) : article.data.summary}
              </p>
               </div>
              <span class="author"> Editez par : {author?.data.name} </span>
             </div>
          </div>
            <a class="image" href={`/blog/${article.id}`}>
              <div class="thumbnail">
              <img src={article.data.thumbnail} alt="" />
            </div>
            </a>
       
          </article>
        ))
      }
      </div>
  </BottomPage>
</div>

<style>
  

  .bg-color {
    color: black !important
    position: relative;
    width: 100%;
    height: 100%;
    background-color: var(--durand-orange);
    color: var(--accents-8);
    padding-bottom: var(--space-6);
  }

  .articles {
    font-size: var(--size-small-text);
    display: grid;
    grid-template-columns: 1fr ;
    gap: 5rem;

    article {
        padding: 0;
        margin: 0;
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        padding: 1rem;
        border-block: 1px solid currentColor;

        & .meta {
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          grid-column:  1 / span 2;
        }

        & .meta .info {
          display: flex;
          flex-direction: column;
          gap: 1rem;
        }

        & .title {
          font-size: var(--h5);
          line-height: 1.3;
        }
        
        & .author, & .description {
          opacity: 0.8;
        }

        & .meta p {
          color: currentColor;
          padding: 0;
          margin: 0;
        }
     
        & .image {
          grid-column: 4 / span 3;
        }
    }

    a {
      height: max-content;
    }

    article .thumbnail {
      width: 100%;
      height: 100%;

      img {
        display: block;
        max-height: 300px;
        filter: grayscale(1);
        transition: 0.3s;
      }

      img:hover {
        filter: grayscale(0);
      }
    }

    article .tags {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;

    .tag {
      position: relative;
      display: flex;
      gap: 0.3rem;
      position: relative;
      font-size: 0.7rem;
      background-color: #ffa50075;
      border-radius: 0.4rem;
      display: flex;
      align-items: center;
      padding: 5px 3px;
      width: max-content;

      &::before {
        content: '';
        float: 0;
        display: block;
        width: 7px;
        border-radius: 7px;
        aspect-ratio: 1  / 1;
        background: #fff;
      }
    }
  }
}




@media screen and (max-width: 590px) {
  .articles article {
    padding: 0;
    display: flex;
    flex-direction:column-reverse;
    gap: 1rem;
    padding-block: 1rem;
  }

  .articles article:first-child {
    /* border-top: none;
    padding-top: 0; */
  }

  .articles article .meta {
    gap: 1rem;
  }

  .articles article .thumbnail {
    padding: 0;
    margin: 0;
  }
}

@media screen and (min-width: 1200px) {
  
  .articles article .meta {
    gap: 2rem;
  }

  .articles article .thumbnail img {
      max-height: 400px;
    }

}


</style>
