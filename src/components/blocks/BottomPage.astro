---
import { discriminatedUnion } from 'astro:schema';

interface Props {
  description?: any;
  classement?: any;
  topic?: any;
  labelForLink?: any;
  href?: any;
}

const { description, classement, topic, labelForLink, href } = Astro.props;
---

<div class="bottom">
  <div class="info">
    <div class="arrow">{classement}</div>
    <div class="approach">
      <span
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="currentColor"
          ><path
            d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z"
          ></path></svg
        ></span
      >
      {topic}
    </div>
    <div class="text-description">
      <p>
        {description}
      </p>
    </div>
  </div>
  <div class="content">
    <slot />
  </div>
  {
    labelForLink && href ?
    (
      <div class="link">
        <a href={href}>{"â†’" + " " + labelForLink}</a>
      </div>
    )
    : <></>
  }
</div>

<style>
  .bottom {
    border-top: 1px solid white;
    padding-block: var(--space);
    margin: 0;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-column: 1 / span 5;

    .content {
      grid-column: 1 / span 5;
      height: auto;
      width: 100%;
      padding-bottom: 2.5rem;

      img {
        max-height: 400px;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      video {
        aspect-ratio:  16 / 9;
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
      }
    }

    .text-description {
      grid-column: 4 / span 5;
    }

    .description p {
      font-size: 0.8rem;
      color: var(--accents-6);

      margin-bottom: 1rem;
    }
  }

  .bottom .info {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-column: 1 / span 5;
    padding-bottom: var(--space-3);

    .approach {
      --line-height: 1;
      display: flex;
      align-items: flex-start;
      grid-column: 2 / span 2;
      line-height: 1;
      gap: 0.5rem;
    }

    span {
      width: 10px;
      height: 10px;
      position: relative;
    }

    .text-description {
      grid-column: 4 / span 2;
    }
  }

  .bottom .info p,
  p,
  .bottom .info {
    font-size: var(--size-small-text);
    font-weight: 600;
  }


  @media screen and (max-width: 590px) {
    .bottom {
    display: flex;
    flex-direction: column;
    }
    
    .bottom .info {
     display: none;
    }

  }

  @media screen and (min-width: 1300px) {
  .bottom .info  {
    font-size: var(--h5);

    span {
      width: 15px;
    }
  }

}

</style>
